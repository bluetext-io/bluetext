modules:
  - id: website
    info: "Base module for other modules in this file to build on."
    module: polytope/node
    params:
      - id: cmd
        info: The command to run
        type: [default, str, ./bin/run]
      - id: api-base-url
        info: Public base URL for the API, if one exists.
        type: [default, str, http://localhost:3030]
      - id: port
        info: The port on which the service will be exposed.
        type: [default, int, 51732]
      - id: restart-policy
        info: Restart policy for the container.
        type: [default, [enum, always, on-failure], always]
      - id: id
        info: The container ID to use.
        type: [default, str, backend]
    args:
      id: website
      image: oven/bun:alpine
      code: { type: host, path: project/website }
      cmd: pt.param cmd
      restart:
        policy: pt.param restart-policy
      services: |-
        #pt-js
        params.cmd === "./bin/run"
          ? [{ id: "website", ports: [{ protocol: "http", port: params.port, 'expose-as': params.port }] }]
          : null;
      env:
        - { name: PORT, value: pt.param port }
        - { name: VITE_API_BASE_URL, value: pt.param api-base-url }
        - { name: LOG_LEVEL, value: INFO }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: website-home-cache }}
        - { path: /root/.bun/, source: { type: volume, scope: project, id: website-bun-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: website-node-modules }}
  - id: website-add
    info: Adds one or more packages to the package.json file.
    module: website
    params:
      - id: packages
        info: comma/whitespace-separated list of npm packages to add to package.json
        type: str
    args:
      id: website-add
      restart-policy: on-failure
      cmd: '#pt-js "bun add " + params.packages.replace(/[\s,]+/g, " ")'
