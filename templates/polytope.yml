tools:
  add-frontend:
    info: |
      Creates and starts a frontend project (with bun+shadcn+react-router v7) at the supplied path.
      Always use this when creating a new frontend project.
      Runs in dev mode with hot reload in a container. Creates an additional module for dependency management in the subproject.
    await: [scaffold-frontend]
    params:
      - id: path
        info: Path to the template to scaffold.
        type: str
    run:
      - id: scaffold-frontend
        module: polytope/scaffold
        args:
          template: templates/frontend
          path: project/modules/{pt.param path}
      - id: frontend
        after:
          step: scaffold-frontend
        code: |-
          #pt-clj
          (-> (clojure.string/replace (:path params) #"[^A-Za-z-0-9]*$" "")
              (clojure.string/replace  #".*/" "")
              (pt/call-module {}))
  add-api:
    info: |
      Creates and starts an API project (with uv+FastAPI+SQLModel, with configuration for Postgres, Couchbase and/or Temporal) at the supplied path.
      Always use this when creating a new API service.
      Runs in dev mode with hot reload in a container. Creates an additional module for dependency management in the subproject.
    await: [scaffold-backend]
    params:
      - id: path
        info: Path to the template to scaffold.
        type: str
    run:
      - id: scaffold-backend
        module: polytope/scaffold
        args:
          template: templates/api
          path: project/modules/{pt.param path}
      - id: backend
        after:
          step: scaffold-backend
        code: |-
          #pt-clj
          (-> (clojure.string/replace (:path params) #"[^A-Za-z-0-9]*$" "")
              (clojure.string/replace  #".*/" "")
              (pt/call-module {}))
  add-postgres:
    info: |
      Creates and starts a Postgres subproject with associated configuration at the given path.
      Runs the Postgres server with a basic dev setup (no auth etc).
    await: [scaffold-postgres]
    run:
      - id: scaffold-postgres
        module: polytope/scaffold
        args:
          template: templates/postgres
          path: "project/modules/postgres"
      - id: postgres
        after:
          step: scaffold-postgres
        code: |-
          #pt-clj
          (pt/call-module "postgres" {})

  add-couchbase:
    info: |
      Creates and starts a Couchbase service to the subproject modules/couchbase and configures it.
      Associated configuration files can be found at modules/config-manager/conf/.
      Runs the Couchbase server with a basic dev setup.
    await: [scaffold-postgres]
    run:
      - id: scaffold-config-manager
        module: polytope/scaffold
        args:
          template: templates/config-manager
          path: "project/modules/config-manager"
      - id: scaffold-couchbase
        module: polytope/scaffold
        args:
          template: templates/couchbase
          path: "project/modules/couchbase"
      - id: config-manager
        after:
          step: scaffold-couchbase
        code: |-
          #pt-clj
          (pt/call-module "config-manager" {})
      - id: couchbase
        after:
          - step: scaffold-couchbase
          - step: scaffold-config-manager
        code: |-
          #pt-clj
          (pt/call-module "couchbase" {})

  add-temporal:
    info: Creates and starts a temporal server, together with Postgres (if not already present). Runs the temporal server, PostgreSQL and temporal-init.
    await: [scaffold-postgres, scaffold-temporal]
    run:
      - id: scaffold-postgres
        module: polytope/scaffold
        args:
          template: templates/postgres
          path: "project/modules/postgres"
      - id: scaffold-temporal
        module: polytope/scaffold
        args:
          template: templates/temporal
          path: "project/modules/temporal"
      - id: postgres
        after:
          step: scaffold-postgres
        code: |-
          #pt-clj
          (pt/call-module "postgres" {})
      - id: temporal
        after:
          - step: scaffold-temporal
          - step: scaffold-postgres
        code: |-
          #pt-clj
          (pt/call-module "temporal" {})
      - id: temporal-ui
        after:
          - step: scaffold-postgres
          - step: scaffold-temporal
        code: |-
          #pt-clj
          (pt/call-module "temporal-ui" {})
